{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApiService = void 0;\nvar http_1 = require(\"@angular/common/http\");\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar app_component_1 = require(\"../../app.component\");\nvar i0 = require(\"@angular/core\");\nvar i1 = require(\"@angular/common/http\");\nvar ApiService = /** @class */function () {\n  function ApiService(httpClient) {\n    this.httpClient = httpClient;\n    this.apiUserName = app_component_1.Env.apiUsername;\n    this.apiPassword = app_component_1.Env.apiPassword;\n    this.uri = app_component_1.Env.apiUrl;\n    this.authorizeUri = this.uri + \"/api/authenticate\";\n    this.createUserUri = this.uri + \"/user\";\n    this.listDocumentUri = this.uri + \"/documents/\";\n    this.putDocumentUri = this.uri + \"/document/\";\n    this.getDocumentUri = this.uri + \"/document/\";\n    this.deleteDocumentUri = this.uri + \"/document/\";\n  }\n  ApiService.prototype.authorize = function () {\n    var _this = this;\n    var result = this.httpClient.post(this.authorizeUri, {\n      \"userName\": this.apiUserName,\n      \"password\": this.apiPassword\n    }, {\n      observe: 'response'\n    });\n    result.subscribe(function (res) {\n      _this.token = ApiService.extractToken(res);\n    });\n    return result;\n  };\n  ApiService.prototype.createUser = function (username, password) {\n    var _this = this;\n    console.info(\"Creating user using api URL '\".concat(this.uri, \"'\"));\n    return this.withAuthorization().pipe((0, operators_1.flatMap)(function (token) {\n      return _this.httpClient.put(_this.createUserUri, {\n        \"userName\": username,\n        \"password\": password\n      }, ApiService.headers(token));\n    })).toPromise();\n  };\n  ApiService.prototype.listDocuments = function (path, creds) {\n    var _this = this;\n    return this.withAuthorization().pipe((0, operators_1.flatMap)(function (token) {\n      return _this.httpClient.get(_this.listDocumentUri + path, ApiService.headersWithAuth(token, creds));\n    })).toPromise();\n  };\n  ApiService.prototype.uploadDocument = function (document, path, creds) {\n    var _this = this;\n    var formData = new FormData();\n    formData.append('file', document);\n    return this.withAuthorization().pipe((0, operators_1.flatMap)(function (token) {\n      return _this.httpClient.put(_this.putDocumentUri + path, formData, {\n        \"headers\": ApiService.headersWithAuth(token, creds)[\"headers\"],\n        responseType: 'blob'\n      });\n    })).toPromise();\n  };\n  ApiService.prototype.downloadDocument = function (path, creds) {\n    var _this = this;\n    this.withAuthorization().pipe((0, operators_1.flatMap)(function (token) {\n      return _this.httpClient.get(_this.getDocumentUri + path, {\n        \"headers\": ApiService.headersWithAuth(token, creds)[\"headers\"],\n        responseType: 'blob'\n      });\n    })).subscribe(function (response) {\n      var dataType = response.type;\n      var binaryData = [];\n      binaryData.push(response);\n      var downloadLink = document.createElement('a');\n      downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, {\n        type: dataType\n      }));\n      downloadLink.setAttribute('download', path.match(/(.+\\/)*([^/]+)$/)[2]);\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n    });\n  };\n  ApiService.prototype.deleteDocument = function (path, creds) {\n    var _this = this;\n    return this.withAuthorization().pipe((0, operators_1.flatMap)(function (token) {\n      return _this.httpClient.delete(_this.deleteDocumentUri + path, ApiService.headersWithAuth(token, creds));\n    })).toPromise();\n  };\n  ApiService.prototype.withAuthorization = function () {\n    if (!this.token) {\n      return this.authorize().pipe((0, operators_1.map)(function (res) {\n        return ApiService.extractToken(res);\n      }));\n    }\n    return (0, rxjs_1.of)(this.token);\n  };\n  ApiService.headers = function (token) {\n    var _a;\n    return {\n      \"headers\": (_a = {}, _a[ApiService.TOKEN_HEADER] = token, _a)\n    };\n  };\n  ApiService.headersWithAuth = function (token, creds) {\n    var _a;\n    return {\n      \"headers\": (_a = {}, _a[ApiService.TOKEN_HEADER] = token, _a[\"user\"] = creds.username, _a[\"password\"] = creds.password, _a)\n    };\n  };\n  ApiService.extractToken = function (response) {\n    return response.headers.get(ApiService.TOKEN_HEADER);\n  };\n  ApiService.TOKEN_HEADER = \"token\";\n  ApiService.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return ApiService;\n}();\nexports.ApiService = ApiService;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}